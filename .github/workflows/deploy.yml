name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  ARTIFACT_REGISTRY: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPO_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

    # Build and Deploy Backend
    - name: Build Backend Image
      run: |
        docker build --platform linux/amd64 \
          -t ${{ env.ARTIFACT_REGISTRY }}/backend:${{ github.sha }} \
          -t ${{ env.ARTIFACT_REGISTRY }}/backend:latest \
          ./backend

    - name: Push Backend Image
      run: |
        docker push ${{ env.ARTIFACT_REGISTRY }}/backend:${{ github.sha }}
        docker push ${{ env.ARTIFACT_REGISTRY }}/backend:latest

    # Add echo commands here to debug before deployment
    - name: Verify Backend Secrets and Variables
      run: |
        echo "Verifying backend deployment variables..."
        echo "Project ID: ${{ env.PROJECT_ID }}"
        echo "Region: ${{ env.REGION }}"
        echo "Artifact Registry: ${{ env.ARTIFACT_REGISTRY }}"
        echo "Backend Image: ${{ env.ARTIFACT_REGISTRY }}/backend:latest"
        echo "DB_URI is set: ${{ secrets.DB_URI != '' }}"
        # NOTE: Do not echo the actual secret value! This is for verification only.

    - name: Deploy Backend to Cloud Run
      run: |
        gcloud run deploy backend \
          --image ${{ env.ARTIFACT_REGISTRY }}/backend::${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 2 \
          --cpu-boost \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars DB_URI=${{ secrets.DB_URI }} \
          --timeout 300

    - name: Get Backend URL
      id: backend-url
      run: |
        BACKEND_URL=$(gcloud run services describe backend \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --format 'value(status.url)')
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT

    # Build and Deploy Frontend
    - name: Build Frontend Image
      run: |
        docker build --platform linux/amd64 \
          -t ${{ env.ARTIFACT_REGISTRY }}/frontend:${{ github.sha }} \
          -t ${{ env.ARTIFACT_REGISTRY }}/frontend:latest \
          ./frontend

    - name: Push Frontend Image
      run: |
        docker push ${{ env.ARTIFACT_REGISTRY }}/frontend:${{ github.sha }}
        docker push ${{ env.ARTIFACT_REGISTRY }}/frontend:latest

    # Add echo commands here to debug before frontend deployment
    - name: Verify Frontend Secrets and Variables
      run: |
        echo "Verifying frontend deployment variables..."
        echo "Frontend Image: ${{ env.ARTIFACT_REGISTRY }}/frontend:${{ github.sha }}"
        echo "Backend URL is set: ${{ steps.backend-url.outputs.url != '' }}"
        # The backend URL is retrieved from the previous step, so we can verify it here.

    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy frontend \
          --image ${{ env.ARTIFACT_REGISTRY }}/frontend:${{ github.sha }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --allow-unauthenticated \
          --port 8080 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars REACT_APP_API_URL=${{ steps.backend-url.outputs.url }}

    - name: Show Deployment URLs
      run: |
        echo "Backend URL: ${{ steps.backend-url.outputs.url }}"
        FRONTEND_URL=$(gcloud run services describe frontend \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --format 'value(status.url)')
        echo "Frontend URL: $FRONTEND_URL"